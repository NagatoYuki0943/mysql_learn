row_number() over(partition by 字段)

    ROW_NUMBER()函数将针对SELECT语句返回的每一行，从1开始编号，赋予其连续的编号。
    在查询时应用了一个排序标准后，只有通过编号才能够保证其顺序是一致的，当使用ROW_NUMBER函数时，也需要专门一列用于预先排序以便于进行编号

    partition by关键字是分析性函数的一部分，它和聚合函数不同的地方在于它能返回一个分组中的多条记录，而聚合函数一般只有一条反映统计值的记录，
    partition by用于给结果集分组，如果没有指定那么它把整个结果集作为一个分组，分区函数一般与排名函数一起使用。


    按照班级分组,每个班级成绩降序
    select id,name,score,class,row_number() over (partition by class order by score desc) as 班级排名 from mb_students1;

    row_number() over (partition by class order by score desc) as 班级排名 ========> 新的一列

    +-----+------------+-------+-------+----------+
    | id  | name       | score | class | 班级排名 |
    +-----+------------+-------+-------+----------+
    |  99 | 爱丽丝     |   104 |     1 |        1 |
    |   4 | 李四       |   100 |     1 |        2 |
    |   7 | 郑七       |   100 |     1 |        3 |
    | 110 | 矢泽妮可   |   100 |     1 |        4 |
    |   6 | 吴六       |    75 |     1 |        5 |
    |   1 | 赵一       |    58 |     1 |        6 |
    |  98 | 爱丽       |    50 |     1 |        7 |
    |  97 | m444       |     1 |     1 |        8 |
    |   5 | 周五       |    90 |     2 |        1 |
    |   3 | 孙三       |    88 |     2 |        2 |
    |   2 | 钱二       |    55 |     2 |        3 |
    | 100 | 黑果       |   101 |     3 |        1 |
    |  90 | 喜羊羊     |   100 |     3 |        2 |
    |   8 | 王八       |    88 |     3 |        3 |
    |  11 | 褚十一     |    85 |     3 |        4 |
    |  96 | 张三       |    60 |     3 |        5 |
    |  21 | 何二十一   |    58 |     3 |        6 |
    |  15 | 韩十五     |    49 |     3 |        7 |
    |   9 | 冯九       |    45 |     3 |        8 |
    |  92 | 沸羊羊     |    40 |     3 |        9 |
    |  10 | 陈十       |    96 |     4 |        1 |
    |  12 | 卫十二     |    85 |     4 |        2 |
    |  91 | 美羊羊     |    60 |     4 |        3 |
    |  14 | 沈十四     |    11 |     4 |        4 |
    |  18 | 秦十八     |    11 |     4 |        5 |
    | 113 | 高板奈利   |   500 |     5 |        1 |
    |  16 | 杨十六     |    94 |     5 |        2 |
    | 107 | 辉夜月1    |    88 |     5 |        3 |
    |  23 | 施二十三   |    86 |     5 |        4 |
    |  17 | 朱十七     |    60 |     5 |        5 |
    |  26 | 曹二十六   |    55 |     5 |        6 |
    |  13 | 蒋十三     |    33 |     5 |        7 |
    |  19 | 尤十九     | NULL  |     5 |        8 |
    | 108 | 黄前久美子 |    89 |     6 |        1 |
    |  24 | 张二十四   |    88 |     6 |        2 |
    | 105 | 辉夜月0    |    88 |     6 |        3 |
    |  25 | 孔二十五   |    80 |     6 |        4 |
    |  22 | 吕二十二   |    59 |     6 |        5 |
    |  20 | 许二十     |    44 |     6 |        6 |
    |  93 | 懒羊羊     |     0 |     6 |        7 |
    | 114 | 静凛       |   521 |     7 |        1 |
    |  94 | 暖羊羊     |    80 |     7 |        2 |
    | 116 | 猫宫日向   |   526 |     8 |        1 |
    | 115 | 凛晨之主   |   521 |     8 |        2 |
    | 117 | 通风口     |   222 |     8 |        3 |
    +-----+------------+-------+-------+----------+
    45 rows in set (0.18 sec)


    查询每个班级的前两名(取两次是因为如果设了班级排名后没法直接在后面获取它)
    select s2.id,s2.name,s2.score,s2.class,s2.班级排名 from
    (select s1.*,row_number() over (partition by class order by score desc) as 班级排名 from mb_students1 as s1) as s2
    where s2.班级排名 <=2;

    简化写法,因为层级不同,所以取列不用加前缀
    select id,name,score,class,班级排名 from
    (select *,row_number() over (partition by class order by score desc) as 班级排名 from mb_students1) as s1
    where 班级排名 <=2;

    +-----+------------+-------+-------+----------+
    | id  | name       | score | class | 班级排名 |
    +-----+------------+-------+-------+----------+
    |  99 | 爱丽丝     |   104 |     1 |        1 |
    |   4 | 李四       |   100 |     1 |        2 |
    |   5 | 周五       |    90 |     2 |        1 |
    |   3 | 孙三       |    88 |     2 |        2 |
    | 100 | 黑果       |   101 |     3 |        1 |
    |  90 | 喜羊羊     |   100 |     3 |        2 |
    |  10 | 陈十       |    96 |     4 |        1 |
    |  12 | 卫十二     |    85 |     4 |        2 |
    | 113 | 高板奈利   |   500 |     5 |        1 |
    |  16 | 杨十六     |    94 |     5 |        2 |
    | 108 | 黄前久美子 |    89 |     6 |        1 |
    |  24 | 张二十四   |    88 |     6 |        2 |
    | 114 | 静凛       |   521 |     7 |        1 |
    |  94 | 暖羊羊     |    80 |     7 |        2 |
    | 116 | 猫宫日向   |   526 |     8 |        1 |
    | 115 | 凛晨之主   |   521 |     8 |        2 |
    +-----+------------+-------+-------+----------+
    16 rows in set (0.16 sec)