1 函数
    在MySQL中,函数分为系统内置函数和自定义函数
    函数的使用,不管是内置函数还是用户自定义函数,都是使用 select 函数名(参数列表)


2 ASCII(s) 返回字符串s第一个字符的ASCII码值
    select ASCII(id)  from mb_students1;
    +-----------+
    | ASCII(id) |
    +-----------+
    |        49 |
    |        50 |
    +-----------+


3 char_length(s) 返回字符串s的长度
    select char_length(name) as length from mb_students1;
    +--------+
    | length |
    +--------+
    |      2 |
    |      2 |
    |      2 |
    |      2 |
    +--------+

  character_length(s) 返回字符串s的长度
    select character_length(name) as length from mb_students1;
    +--------+
    | length |
    +--------+
    |      2 |
    |      2 |
    |      2 |
    |      2 |
    +--------+

  length(s) 判断字符串s的字节数(与字符集有关)
    select length(name) as length from mb_students1;
    +--------+
    | length |
    +--------+
    |      6 |
    |      6 |
    |      6 |
    +--------+

    select char_length('a'),length('a');
    +------------------+-------------+
    | char_length('a') | length('a') |
    +------------------+-------------+
    |                1 |           1 |          //英文在ust8中1个字母占1个字节
    +------------------+-------------+

    mysql> select char_length('你好'),length('你好');
    +---------------------+----------------+
    | char_length('你好') | length('你好') |
    +---------------------+----------------+
    |                   2 |              6 |    //中文在ust8中1个字母占3个字节
    +---------------------+----------------+


4 concat(s1,s2,s3) 将多个字符串合并成一个输出
    select concat(name,'-',age) from mb_students1;
    +----------------------+
    | concat(name,'-',age) |
    +----------------------+
    | 赵一-15              |
    | 钱二-16              |
    | 孙三-16              |
    +----------------------+

  concat_ws('a',s1,s2) 将多个字符串合并成一个输出,使用a分隔
    select concat_ws('--',name,age) from mb_students1;
    +--------------------------+
    | concat_ws('--',name,age) |
    +--------------------------+
    | 赵一--15                 |
    | 钱二--16                 |
    | 孙三--16                 |
    +--------------------------+


5 field(s,s1,s2,s3...) 返回第一个字符串s在后面字符串列表(s1,s2..)的出现的第一个位置
    select field('1','2','3','1','1','5','6'); 返回3
    +------------------------------------+
    | field('1','2','3','1','1','5','6') |
    +------------------------------------+
    |                                  3 |
    +------------------------------------+

    select field('1',"3214213");
    +----------------------+
    | field('1',"3214213") |
    +----------------------+
    |                    0 |    //得不到结果,后面的字符是分开的
    +----------------------+

  find_in_set(s,s1),返回s在s1中出现的第一个位置
    select find_in_set('1',"3,2,1,4,2,1,3");  返回3
    +----------------------------------+
    | find_in_set('1',"3,2,1,4,2,1,3") |
    +----------------------------------+
    |                                3 |
    +----------------------------------+

    select find_in_set('1',"3214213");
    +----------------------------+
    | find_in_set('1',"3214213") |
    +----------------------------+
    |                          0 |  //这样得不到结果,搜索的字符串必须有 , 分隔
    +----------------------------+

  instr('s1',s):判断字符s在目标字符串s1中是否存在,存在,返回其位置,不存在返回0
    select instr("5461",'1');
    +-------------------+
    | instr("5461",'1') |
    +-------------------+
    |                 4 |
    +-------------------+


6 lcase(s) s中全变为小写
  lower(s)

    select lcase("ABCdefg");  结果均为 abcdefg
    +------------------+
    | lcase("ABCdefg") |
    +------------------+
    | abcdefg          |
    +------------------+

    select lower("ABCdefg");
    +------------------+
    | lower("ABCdefg") |
    +------------------+
    | abcdefg          |
    +------------------+


7 ucase(s) s中全变为大写
  upper(s)

    select ucase("ABCdefg");  结果均为 ABCDEFG
    +------------------+
    | ucase("ABCdefg") |
    +------------------+
    | ABCDEFG          |
    +------------------+

    select upper("ABCdefg");
    +------------------+
    | upper("ABCdefg") |
    +------------------+
    | ABCDEFG          |
    +------------------+


8 trim  去除首尾的空格
  ltrim 去除左侧空格
  rtrim 去除右侧空格 不好看出来就不测试了

    select ltrim("    abc"); 结果是 abc 左侧没空格
    +------------------+
    | ltrim("    abc") |
    +------------------+
    | abc              |
    +------------------+
    select trim("    abc"); 结果是 abc 左侧没空格
    +-----------------+
    | trim("    abc") |
    +-----------------+
    | abc             |
    +-----------------+

9 left(s,n)  截取字符串s的前n个字符 (位置超过长度,截取所有)
  right(s,n) 截取字符串s的后n个字符 (位置超过长度,截取所有)
    select left("abcdefg",3);  返回 abc
    +-------------------+
    | left("abcdefg",3) |
    +-------------------+
    | abc               |
    +-------------------+

    select right("abcdefg",3); 返回 efg
    +--------------------+
    | right("abcdefg",3) |
    +--------------------+
    | efg                |
    +--------------------+


10 mid(s1,m,n) 从中间指定位置m开始,截取n个字符,如果不指定截取长度,直到最后
    select mid("ABCDEFG",3),mid("ABCDEFG",3,2);
    +------------------+--------------------+
    | mid("ABCDEFG",3) | mid("ABCDEFG",3,2) |
    +------------------+--------------------+
    | CDEFG            | CD                 |
    +------------------+--------------------+


11 lpad(s1,len,s2);  在字符串s1左边处填充字符串s2,直到长度达到len
   rpad(s1,len,s2);  在字符串s1右边处填充字符串s2,直到长度达到len

    select lpad("abc",10,"--");  结果是 -------abc
    +---------------------+
    | lpad("abc",10,"--") |
    +---------------------+
    | -------abc          |
    +---------------------+

    select rpad("abc",10,"--");  结果是 abc-------
    +---------------------+
    | rpad("abc",10,"--") |
    +---------------------+
    | abc-------          |
    +---------------------+


12 substring_index(s,delimiter,n)
   返回从字符串s的第nu个出现的分隔符delimiter之后的字符串
   如果n为正数,返回从左往右数第n个字符串左边的字符串  正-->返回左边
   如果n为负数,返回从右往左数第n个字符串右边的字符串  负-->返回右边

    select substring_index("a-b-c-d-e",'-',1);  返回 a
    +------------------------------------+
    | substring_index("a-b-c-d-e",'-',1) |
    +------------------------------------+
    | a                                  |
    +------------------------------------+

    select substring_index("a-b-c-d-e",'-',-1); 返回 e
    +-------------------------------------+
    | substring_index("a-b-c-d-e",'-',-1) |
    +-------------------------------------+
    | e                                   |
    +-------------------------------------+

    select substring_index("a-b-c-d-e",'-',2);  返回 a-b
    +------------------------------------+
    | substring_index("a-b-c-d-e",'-',2) |
    +------------------------------------+
    | a-b                                |
    +------------------------------------+

    select substring_index("a-b-c-d-e",'-',-2);  返回 d-e
    +-------------------------------------+
    | substring_index("a-b-c-d-e",'-',-2) |
    +-------------------------------------+
    | d-e                                 |
    +-------------------------------------+

    select substring_index(substring_index("a-b-c-d-e",'-',3),'-',-1);  返回c
                            里层先返回 a-b-c , 外层再返回 c
    +------------------------------------------------------------+
    | substring_index(substring_index("a-b-c-d-e",'-',3),'-',-1) |
    +------------------------------------------------------------+
    | c                                                          |
    +------------------------------------------------------------+