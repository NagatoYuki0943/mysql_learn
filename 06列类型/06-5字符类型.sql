字符类型
1 char
    定长字符,指定长度后,系统一定会开辟空间
    char(L) L代表字符数,中文和英文一视同仁
    L : 0~255

2 varchar
    变长字符,指定长度后,系统会根据实际分配存储长度(没超过最大长度)
    varchar(L) L代表字符数
    L : 0~65535
    因为varchar要记录数据长度(系统根据长度分配空间),
    每个varcahr数据产生后,系统都会在数据后面增加1-2字节额外开销,用来保存数据所占用的空间长度
    如果数据本事小于127个字符,额外开销1个字节,大于127,开销两个字节

3.对比(使用utf8,每一字符都占3字节)
    存储数据    char(2)     varchar(2)      char所占字节    varchar所占字节
    A           A           A               2*3=6           1*3+1=4
    AB          AB          AB              2*3=6           2*3+1=7

4.char和varchar区别:
    (1).char一定使用指定空间存储 varchar根据数据来分配
    (2).char的数据查询效率比varhcar高
    如果数据定长,那么使用char,不确定使用varchar

    如果数据长度超过255,不论是否固定长度,都使用text,不使用char和varchar

5 文本类型
    text : 存储普通字符文本
    blob : 存储二进制文本(图片,文件),一般不使用,因为文件太大了,一般使用链接指向文件

    系统提供了四种text
    tinytext: 系统使用一个字节来保存(保存对应的位置,不是文件本身) 实际存储为: 2^8+1
    text: 使用两个字节保存 实际存储为: 2^16+1
    mediumtext: 使用三个自己保存 实际存储为: 2^24+3
    longtext: 使用四个字节保存 实际存储为: 2^32+4

    注意:1.在选择对应的存储文本的时候,不用刻意选择text类型,系统会自动根据长度选择合适的类型
         2.在选择字符存储的时候,如果数据超过255个,一定选择text


6 enum 枚举类型
    在数据插入之前先设定几个项,这几个项就是可能最终出现的结果
    如果确定某个字段只有这几个值,如性别:男,女,保密
    系统就可以在设定字段的时候规定当前字段只能存放固定的几个值

    基本语法: enmu(值1,值2...)
    系统提供了1到2个字节来存储数据,通过计算enum中列举的值来选择实际存储空间
    如果数据值在255个以内,那么一个字节就够了,超过255小于65535就用两个字节保存

    (1)创建表
        create table mb_enum(
            gender enum('男','女','保密')
        )charset utf8;

        +--------+------------------------+------+-----+---------+-------+
        | Field  | Type                   | Null | Key | Default | Extra |
        +--------+------------------------+------+-----+---------+-------+
        | gender | enum('男','女','保密') | YES  |     | NULL    |       |
        +--------+------------------------+------+-----+---------+-------+
    (2) 合法数据,输入确定的值
        insert into mb_enum values('男'),('女'),('保密');

        +--------+
        | gender |
        +--------+
        | 男     |
        | 女     |
        | 保密   |
        +--------+

    (3) 放错误数据 enum有规范数据的功能,能够保证必须是设定的范围,其他不可以
        insert into mb_enum values('male'),('female');
        Data truncated for column 'gender' at row 1 //插不进去

    (4) enum存储原理,存储的值并不是真正的字符串,而是字符串对应的下标
        系统设定类型的时候,会给每个元素设定下标,类似于数组
        从1开始
        enum(1=>'男',2=>'女',3=>'保密')
        特性:MySQL中系统是自动进行类型转换的:
        如果碰到"+,-,*,/" 系统就会自动将数据转换成数值,而普通字符串转换成数值0

        select 字段名+0 from 表名;
        select gender+0 from mb_enum;
        +----------+
        | gender+0 |
        +----------+
        |        1 |  1对应男
        |        2 |  2对顶女
        |        3 |  3对应保密
        +----------+

    (5) 及软实际enum字段存储的是数值,那么实际存储的时候就可以存入数值
        insert into mb_enum values(1),(2),(3);

        +--------+
        | gender |
        +--------+
        | 男     |
        | 女     |
        | 保密   |
        | 男     |  后面三行就是用数字输入的
        | 女     |
        | 保密   |
        +--------+

    (6) 枚举的意义
        a.规范数据本身
        b.节省存储空间

7 set
    集合:将多个数据选项可以同时保存的数据类型(enum一次一个)
    本质是将指定的项按照二进制位来进行控制:1表示该选项被选中,0表示没选中
    基本语法 : set('值1','值2'...)
    系统为set提供了提供了多个字节来保存,但是系统自动计算具体存储单元
    1个字节有8个选项,2个字节只有16个选项,3个字节存储24个选项,8个字节,表示64个选项(最多64个)
    11111111         1111111111111111

    set和enum一样,最终存储到的依然是数字,不是字符串
    (1) 实现
        create table mb_set(
            hobby set('篮球','足球','羽毛球','乒乓球','网球','橄榄球','冰球','高俅')
        )charset utf8;

        +-------+--------------------------------------------------------------------+------+-----+---------+-------+
        | Field | Type                                                               | Null | Key | Default | Extra |
        +-------+--------------------------------------------------------------------+------+-----+---------+-------+
        | hobby | set('篮球','足球','羽毛球','乒乓球','网球','橄榄球','冰球','高俅')  | YES  |     | NULL    |       |
        +-------+--------------------------------------------------------------------+------+-----+---------+-------+
        hobby共1个字节

    (2) 插入数据,可以插入多个数据,在插入的字符串中使用 , 隔开  所有数据使用一对 '' 包裹
        insert into mb_set values('篮球,乒乓球,足球');

        +------------------+
        | hobby            |
        +------------------+
        | 篮球,足球,乒乓球 |
        +------------------+

    (3) 数据选项所在的数据与数据插入的顺序无关,最终变成选项对应的顺序
        insert into mb_set values('冰球,高俅,篮球,乒乓球,足球');
        +----------------------------+
        | hobby                      |
        +----------------------------+
        | 篮球,足球,乒乓球           |
        | 篮球,足球,乒乓球,冰球,高俅 |
        +----------------------------+
        结果不受自己输入的顺序影响

    (4) a.分析数据存储方式:系统将对应的数据选项(设计)按照顺序进行编排
            从第一个开始进行占位,每一个数据占用一位

        b.数据在存储的时候如果被选中,那么对应的位就位1,否则为0

            insert into mb_set values('篮球,乒乓球,足球')
                                        11010000
            insert into mb_set values('冰球,高俅,篮球,乒乓球,足球');
                                        11010011

        c.系统在进行存储时自动将得到的最终的二进制颠倒过来,然后再转换成10进制
                      11010000
            存储转换   00101111  ===>> 1+2+4+8+32=47

        d.查看数据:按照自动转换成数值来查看
            select hobby+0 from mb_set;
            +---------+
            | hobby+0 |
            +---------+
            |      11 |
            |     203 |
            +---------+
        e.既然是数值,那么可以插入数值来设定
        注意:使用10进制插入,数字插入的前提是对应的二进制位上有对应的项,不然可能出错
        insert into mb_set values(255);
        insert into mb_set values(00000001);

        | 篮球,足球,羽毛球,乒乓球,网球,橄榄球,冰球,高俅 |
        | 篮球                                         |

    (5) 集合的意义
        1.规范数据
        2.节省存储空间

    enum:单选框
    set:复选框